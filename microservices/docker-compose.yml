version: "3.9"

services:
  ############################ user service ##########################
  db-user-service:
    container_name: db-user-service
    image: postgres
    volumes:
      - ./data/db-user-service:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=users
      - POSTGRES_USER=users
      - POSTGRES_PASSWORD=users
  user-service:
    container_name: user-service
    build: ./users/
    deploy:
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s
      resources:
        limits:
          cpus: '0.5'
          memory: 256M
        reservations:
          cpus: '0.5'
          memory: 50M
    command: python manage.py runserver 0.0.0.0:8001
    volumes:
      - ./users/:/code
    ports:
      - "8001:8001"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8001"]
      interval: 1m30s
      timeout: 10s
      retries: 3
      start_period: 40s
    environment:
      - POSTGRES_NAME=users
      - POSTGRES_USER=users
      - POSTGRES_PASSWORD=users
      - POSTGRES_HOST=db-user-service
    depends_on:
      - db-user-service

  ############################ plan service ##########################
  db-plan-service:
    container_name: db-plan-service
    image: postgres
    volumes:
      - ./data/db-plan-service:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=plan
      - POSTGRES_USER=plan
      - POSTGRES_PASSWORD=plan
  plan-service:
    container_name: plan-service
    build: ./plan/
    deploy:
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s
      resources:
        limits:
          cpus: '0.5'
          memory: 256M
        reservations:
          cpus: '0.5'
          memory: 50M
    command: python manage.py runserver 0.0.0.0:8002
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8002"]
      interval: 1m30s
      timeout: 10s
      retries: 3
      start_period: 40s
    volumes:
      - ./plan/:/code
    ports:
      - "8002:8002"
    environment:
      - POSTGRES_NAME=plan
      - POSTGRES_USER=plan
      - POSTGRES_PASSWORD=plan
      - POSTGRES_HOST=db-plan-service
    depends_on:
      - db-plan-service

  ############################ course service ##########################

  db-course-service:
    container_name: db-course-service
    image: postgres
    volumes:
      - ./data/db-course-service:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=course
      - POSTGRES_USER=course
      - POSTGRES_PASSWORD=course

  course-service:
    container_name: course-service
    build: ./courses/
    deploy:
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s
      resources:
        limits:
          cpus: '0.5'
          memory: 256M
        reservations:
          cpus: '0.5'
          memory: 50M
    command: python manage.py runserver 0.0.0.0:8003
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8003"]
      interval: 1m30s
      timeout: 10s
      retries: 3
      start_period: 40s
    volumes:
      - ./courses/:/code
    ports:
      - "8003:8003"
    environment:
      - POSTGRES_NAME=course
      - POSTGRES_USER=course
      - POSTGRES_PASSWORD=course
      - POSTGRES_HOST=db-course-service
    depends_on:
      - db-course-service


  ############################ notifications service ##########################

  db-notifications-service:
    container_name: db-notifications-service
    image: postgres
    volumes:
      - ./data/db-notifications-service:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=notifications
      - POSTGRES_USER=notifications
      - POSTGRES_PASSWORD=notifications

  notifications-service:
    container_name: notifications-service
    build: ./notifications/
    deploy:
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s
      resources:
        limits:
          cpus: '0.5'
          memory: 256M
        reservations:
          cpus: '0.5'
          memory: 50M
    command: python manage.py runserver 0.0.0.0:8004
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8004"]
      interval: 1m30s
      timeout: 10s
      retries: 3
      start_period: 40s
    volumes:
      - ./notifications/:/code
    ports:
      - "8004:8004"
    environment:
      - POSTGRES_NAME=notifications
      - POSTGRES_USER=notifications
      - POSTGRES_PASSWORD=notifications
      - POSTGRES_HOST=db-notifications-service
    depends_on:
      - db-notifications-service
      
      
